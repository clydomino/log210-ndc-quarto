# Exercice : Classes conceptuelles dans le MDD

À partir du cas d’utilisation à la fin de à cet exercice, trouvez des
classes conceptuelles candidates avec les deux méthodes proposées dans
la **section 9.5** du livre:

-   En utilisant une liste de [**catégories de classes**](#sec-categoriesClasses)

-   À l’aide de groupes nominaux

## Par catégories de classes

Proposer les classes candidates provenant du cas d’utilisation selon les
catégories de classes

| **Catégorie de classe conceptuelle**      | **Classes candidates selon le cas d’utilisation** |
| ----------- | ----------- |
|Transaction métier (d'affaires)             |      ...       |    
|     ...        |       ...      |
|      ...       |       ...      |
|     ...        |       ...      |
|      ...       |       ...      |

## À l’aide de groupes nominaux

C’est l’analyse linguistique consistant à repérer les noms et les
groupes nominaux dans la description textuelle d’un domaine.

## Diagramme de classes conceptuelles

À partir du [cas d’utilisation en annexe](#sec-usecases), esquissez le Modèle du domaine correspondant au
domaine de l’application.

1. Considérez les   [classes candidates identifiées par catégorie et les groupes nominaux](#sec-classes) provenant de l’exercice précédent (une liste est dans l’annexe).

2. Notez que les classes candidates et groupes nominaux ne sont pas tous les classes ou attributs (certains n’ont rien à voir avec le problème du domaine). Vous devez appliquer
les directives vues dans le chapitre 9 du livre.

3. Tout attribut doit avoir un type.

4. Limitez-vous à des associations “mémorisables” dans le contexte de l’application du logiciel (ne pas faire des associations hors de la portée du cas d’utilisation).

5. Vérifiez les cardinalités.

6. Vérifiez les verbes sur les associations ainsi que le sens de lecture.

Pour faire votre modèle:

> *Vous pouvez les dessiner à la main et en prendre une photo.*
>
> *Vous pouvez également utiliser PlantUML:*

-   *[tutoriel VSCode sur YouTube](https://www.youtube.com/watch?v=xkwJ9GwgZJU)*

-   *[PlantUML Gizmo](https://gsuite.google.com/marketplace/app/plantuml_gizmo/950520042571), module supplémentaire Google Docs,*

-   [*PlantText.com*](https://www.planttext.com/)


(Votre MDD devrait apparaître ci-bas) 


## Annexe 1 : Cas d'utilisation

### Cas d’utilisation - Réserver un livre de la bibliothèque{#sec-usecases}

**Parties prenantes et intérêts** :  
- **Le Membre.** Il veut un moyen de recherche exact et rapide et ne
veut pas que la Bibliothèque mémorise des informations sur ses
recherches (confidentialité). Il veut pouvoir réaliser des réservations
aisément, obtenir un service rapide en fournissant un minimum d’efforts.
Il veut également une preuve de réservation.  
- **La Bibliothèque.** Elle veut enregistrer correctement les
réservations et satisfaire les souhaits des membres.  
**Préconditions** : Le Membre est identifié et authentifié  
**Acteur principal : Membre**

1.  Le membre choisit la fonction « recherche » et saisit du texte décrivant le livre (par exemple, une partie du titre, « UML »).

2.  Le système affiche une liste de livres (le titre, l’auteur et l’année) correspondant à la recherche, par exemple, « UML2 et les
design patterns, Craig Larman, 2005 » et « UML par la pratique, Pascal Rocques, 2009 ».

3.  Le membre choisit un livre parmi les résultats, par exemple, « UML2 et les design patterns, Craig Larman, 2005 ».

4.  Le système affiche les informations détaillées du livre (le titre, l’auteur, le numéro ISBN, la maison d’édition, le numéro de l’édition et l’année) ainsi que la liste de tous les exemplaires
du livre indiquant s’ils sont disponibles ou pas, par exemple,
deux exemplaires du livre « UML2 et les design patterns », un avec
l’identificateur d’exemplaire « 1 » qui est disponible et un avec
l’identificateur d’exemplaire « 2 » qui n’est pas disponible.

5.  Le membre réserve un exemplaire du livre qui est disponible.

6.  Le système confirme la réservation en affichant un numéro de
réservation avec le nom du membre et le code de l’exemplaire du
livre.

Extensions (scénarios alternatifs) :

2.  Aucun livre ne correspond au texte de la recherche.

    1.  Le système affiche un message indiquant qu’aucun livre n’a été trouvé.

    2.  Le membre lance une nouvelle recherche.

<!-- -->

4.  Tous les exemplaires ne sont pas disponibles.

    1.  Le système affiche toutes les informations du livre et des exemplaires, mais un message indique qu’il n’est pas possible de réserver, faute d’exemplaires disponibles.

    2.  Le membre lance une nouvelle recherche.

## Annexe 2 :  Classes candidates et groupes nominaux{#sec-classes}

Cette liste est le résultat de l’application des méthodes 2 et 3 pour trouver les classes
candidates et groupes nominaux (c’est une solution possible de l’exercice précédent).

| **Catégorie de classe conceptuelle**      | **Classes candidates selon le cas d’utilisation** |
| ----------- | ----------- |
|Transactions d’entreprise  | Réservation            |    
|Rôles des personnes, organisation   | Membre, Bibliothèque            |
|Produit ou service en liaison à une transaction ou une ligne de transaction | Livre, Exemplaire            |    
|Lieu de la transaction     | Bibliothèque            |
|Objets physiques           | Livre, Exemplaire            |    
|Descriptions d’objets (**voir sec. 9.13!**)  | Livre (décrit la classe Exemplaire dont les objets peuvent tous être empruntés)            |
|Catalogue            | CatalogueLivre            |    

### Groupes nominaux

C’est l’analyse linguistique consistant à repérer les noms et les
groupes nominaux dans la description textuelle d’un domaine.

*N.B. Les groupes nominaux peuvent être des classes ou des attributs, ou peuvent ne pas s’appliquer du tout.*

Bibliothèque \
Liste de livres \
Membre \
Nom \
Reservation \
Livre \
Titre \
Auteur \
ISBN \
Maison d’édition \
Numéro de l’édition \
Année \
Exemplaires \
Nombres \
Code \
Disponibilité \
Réservation \
Numéro de confirmation \
Nom du membre \
Code de l’exemplaire 